# ~/.tmux.conf
#
# Based on http://tangledhelix.com/blog/2012/04/28/iterm2-keymaps-for-tmux/
#

###########################################################################
# General options
###########################################################################

# 256 colors please
set -g default-terminal 'screen-256color'

# Ring the bell if any background window rang a bell
set -g bell-action any

# Watch for activity in background windows
setw -g monitor-activity on
set -g visual-activity on

# Scrollback size
set -g history-limit 10000

# Utilitzar el prefix C-a
unbind C-b
set -g prefix C-s
bind C-s send-prefix

# Set first window to index 1 (not 0) to map more to the keyboard layout
set -g base-index 1
setw -g pane-base-index 1

# Lowers the delay time between the prefix key and other keys - fixes pausing in vim
set -sg escape-time 1

# Pass through xterm keys
set -g xterm-keys on

# Automatically set window title
setw -g automatic-rename off
set-option -g allow-rename off
set-window-option -g automatic-rename off

# Automatically renumber windows on close
set-option -g renumber-windows on

###########################################################################
# General keymap
###########################################################################

# Keep your finger on ctrl, or don't, same result
bind-key C-d detach-client
bind-key C-c new-window

# Clears the current pane
bind-key k send-keys -R \; clear-history \;
bind-key C-k send-keys -R \; clear-history \;

# Redraw the client (if interrupted by wall, etc)
bind R refresh-client

# Reload tmux config
unbind r
bind r \
    source-file ~/.tmux.conf \;\
    display ' Reloaded tmux config.'

# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set -g status-keys emacs

# Use vi keybindings in copy and choice modes
setw -g mode-keys vi

###########################################################################
# Window management / navigation
###########################################################################

# Move between windows
bind-key C-h previous-window
bind-key C-l next-window

# C-\ (no prefix) to skip to last window we were in before this one
bind -n "C-\\" last-window

# C-Space (no prefix) to tab to next window
bind -n C-Space next-window
bind -n C-S-Space previous-window

###########################################################################
# Pane management / navigation
###########################################################################

# Horizontal splits with s or C-s
unbind '"'
unbind s
unbind C-s
bind-key s split-window
bind-key C-s split-window

# Vertical split with v or C-v
unbind %
unbind v
unbind C-v
bind-key v split-window -h
bind-key C-v split-window -h

# Navigation with C-{h,j,k,l} -- NO PREFIX
# https://gist.github.com/mislav/5189704
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Cycle through windows with PREFIX C-l and PREFIX C-h
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Pane resize in all four directions using vi bindings.
# Can use these raw but I map them to Cmd-Opt-<h,j,k,l> in iTerm2.
# http://tangledhelix.com/blog/2012/04/28/iterm2-keymaps-for-tmux/
# Note on a few prefix options: C-a = 0x01, C-b = 0x02, C-g = 0x06
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

# Easily toggle synchronization (mnemonic: e is for echo)
# Sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

###########################################################################
# Scrollback / pastebuffer
###########################################################################

# Vim-style copy/paste
unbind [
bind Space copy-mode
#bind y copy-mode
#bind C-y copy-mode
#bind Enter copy-mode
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection
bind -t vi-copy Enter copy-pipe 'xclip -selection clipboard -i'
#bind -t vi-copy Escape cancel

if-shell 'test "$(uname)" = "Darwin"' 'source ~/.tmux-osx.conf'

###########################################################################
# Mouse mode
###########################################################################

set -g mode-mouse off
set -g mouse-resize-pane off
set -g mouse-select-pane off
set -g mouse-select-window off

# Toggle mouse on
bind m \
    set -g mode-mouse on \;\
    set -g mouse-resize-pane on \;\
    set -g mouse-select-pane on \;\
    set -g mouse-select-window on \;\
    display ' Mouse: ON'

# Toggle mouse off
bind M \
    set -g mode-mouse off \;\
    set -g mouse-resize-pane off \;\
    set -g mouse-select-pane off \;\
    set -g mouse-select-window off \;\
    display ' Mouse: OFF'

###########################################################################
# Color scheme (Solarized light)
###########################################################################

# Enable UTF-8 support in status bar
set -g status-utf8 on

# Set refresh interval for status bar
set -g status-interval 30

# Center the status bar
set -g status-justify centre

colourbg='colour8'
colourfg='colour31'
colourstatus='colour231'

bind B \
    set -g window-status-format '#[fg=colour231,bg=colour8] #I-#W ' \;\
    set -g window-status-current-format '#[fg=colour231,bg=colour31,noreverse,bold] #I-#W ' \;\
    set -g status-left ' #[bold]#S#[default]#[fg=colour31]:#I.#P#[default]' \;\
    set -g status-right '#[bold]#(whoami) ● #H#[default] | #[fg=colour31]%d/%m/%Y - %H:%M#[default] ' \;\
    set -g status-right '#[fg=colour31]%d/%m/%Y - %H:%M#[default] ' \;\
    set -g status-fg 'colour231' \;\
    set -g status-bg 'colour8' \;\
    set -g pane-border-fg 'colour31' \;\
    set -g pane-border-bg 'colour8' \;\
    set -g pane-active-border-fg 'colour31' \;\
    set -g pane-active-border-bg 'colour8' \;\
    display ' Color dark'

bind b \
    set -g window-status-format '#[fg=colour244,bg=colour15] #I-#W ' \;\
    set -g window-status-current-format '#[fg=colour15,bg=colour8,noreverse,bold] #I-#W ' \;\
    set -g status-left ' #[bold]#S#[default]#[fg=colour8]:#I.#P#[default]' \;\
    set -g status-right '#[fg=colour8]%d/%m/%Y - %H:%M#[default] ' \;\
    set -g status-fg 'colour244' \;\
    set -g status-bg 'colour15' \;\
    set -g pane-border-fg 'colour8' \;\
    set -g pane-border-bg 'colour15' \;\
    set -g pane-active-border-fg 'colour8' \;\
    set -g pane-active-border-bg 'colour15' \;\
    display ' Color light'

set -g status-fg $colourstatus
set -g status-bg $colourbg
set -g pane-border-fg $colourfg
set -g pane-border-bg $colourbg
set -g pane-active-border-fg $colourfg
set -g pane-active-border-bg $colourbg
set -g window-status-activity-attr 'bold'
set -g message-fg 'colour231'
set -g message-bg 'colour1'
set -g message-attr 'bold'

# Custom status bar
# Powerline symbols:
set -g status-left-length '32'
set -g status-right-length '150'

# Inconsolata-dz-Powerline Theme:
set -g window-status-format '#[fg='$colourstatus',bg='$colourbg'] #I-#W '
set -g window-status-current-format '#[fg='$colourstatus',bg='$colourfg',noreverse,bold] #I-#W '
set -g status-left ' #[bold]#S#[default] [#I:#P#[default]]'
set -g status-right '#[bold]#(whoami) ● #H#[default] | #[fg='$colourfg']%d/%m/%Y - %H:%M#[default] '
set -g status-right '%d/%m/%Y - %H:%M '

set -g window-status-format '#[fg=colour244,bg=colour15] #I-#W '
set -g window-status-current-format '#[fg=colour15,bg=colour8,noreverse,bold] #I-#W '
set -g status-left ' #[bold]#S#[default]#[fg=colour8]:#I.#P#[default]'
set -g status-right '#[fg=colour8]%d/%m/%Y - %H:%M#[default] '
set -g status-fg 'colour244'
set -g status-bg 'colour15'
set -g pane-border-fg 'colour8'
set -g pane-border-bg 'colour15'
set -g pane-active-border-fg 'colour8'
set -g pane-active-border-bg 'colour15'

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tmux-yank/yank.tmux'
run-shell '~/.tmux/plugins/tmux-copycat/copycat.tmux'
#run-shell '~/.tmux/plugins/tmux-resurrect/resurrect.tmux'
